name: Tizen web app build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  TIZEN_STUDIO_URL: "http://download.tizen.org/sdk/Installer/tizen-studio_5.5/web-cli_Tizen_Studio_5.5_ubuntu-64.bin"

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        app: ['ImageClassificationSingleShot', 'ImageClassificationPipeline', 'ImageClassificationOffloading', 'ImageClassificationOffloadingYolo']
    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: -${{ github.event.pull_request.commits }}
    - name: Install Tizen Studio
      run: |
        wget -nc -O ${{ github.workspace }}/installer $TIZEN_STUDIO_URL
        chmod a+x ${{ github.workspace }}/installer
        bash ${{ github.workspace }}/installer --accept-license ${{ github.workspace }}/tizen-studio
    - name: Download tflite model
      if: ${{ matrix.app == 'ImageClassificationOffloadingYolo' }}
      run: |
        pip install ultralytics
        python3 ${{ github.workspace }}/Tizen.web/${{ matrix.app }}/get_tflite_model.py
        mv yolov8s_saved_model/yolov8s_float32.tflite ${{ github.workspace }}/Tizen.web/${{ matrix.app }}/res
      shell: bash
    - name: Build Tizen web application
      shell: bash
      run: |
        export PATH=$PATH:${{ github.workspace }}/tizen-studio/tools/ide/bin
        tizen build-web -- ${{ github.workspace }}/Tizen.web/${{ matrix.app }}
        tizen package -t wgt -- ${{ github.workspace }}/Tizen.web/${{ matrix.app }}/.buildResult
    - name: Upload wgt package
      uses: actions/upload-artifact@v4
      with:
        name: tizen_web_${{ matrix.app }}
        path: ${{ github.workspace }}/Tizen.web/${{ matrix.app }}/.buildResult/${{ matrix.app }}.wgt
